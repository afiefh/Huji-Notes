% samples for the X axies
x=[0,1.2,2.4,3.6,4.8];

% different samples for the Y axies, each corresponding to a different function.
y=[1,2,2.5,2.5,3]';
z=[1,3,2,2,3]';
u=[3,3,2,2,1]';
v=[0,0,0,1,0]';

% our base vectors to calculate the matrix
e1=[1,0,0,0,0];
e2=[0,1,0,0,0];
e3=[0,0,1,0,0];
e4=[0,0,0,1,0];
e5=[0,0,0,0,1];

% let's start calculating the matrix
c1=polyfit(x,e1,3)';
c2=polyfit(x,e2,3)';
c3=polyfit(x,e3,3)';
c4=polyfit(x,e4,3)';
c5=polyfit(x,e5,3)';

fprintf('A. The C matrix corresponding to polyfit(x,y,3) where x is [0,1.2,2.4,3.6,4.8]\n');
C=[c1,c2,c3,c4,c5]

% now we are supposed to find the coefficients of the polynoms using matrix 
%  muliplication *and* polyfit.

fprintf('B. The coefficients using matrix multiplication and polyfit:\n');
cy=(C*y)'
cpy=polyfit(x,y',3)

cz=(C*z)'
cpz=polyfit(x,z',3)

cu=(C*u)'
cpu=polyfit(x,u',3)

cv=(C*v)'
cpv=polyfit(x,v',3)


fprintf('C. Building the graphs of approximated functions using the coefficients we found through matrix multiplication.\n');

xx=0:0.1:4.8; %this is the range where the function matches the original best

valuesy=polyval(cy,xx);
valuesz=polyval(cz,xx);
valuesu=polyval(cu,xx);
valuesv=polyval(cv,xx);

subplot(2,2,1);
plot(xx,valuesy,'-',x,y,'*');

subplot(2,2,2);
plot(xx,valuesz,'-',x,y,'*');

subplot(2,2,3);
plot(xx,valuesu,'-',x,y,'*');

subplot(2,2,4);
plot(xx,valuesv,'-',x,y,'*');

print -dpng workshop1.png;
