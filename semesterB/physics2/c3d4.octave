#!/usr/bin/env octave
function [dx,dy]=afiefE(x,y,q,x0,y0) # x,y is a space, q the charge, 
				     # x0,y0 is where the charge is positioned
  rx=x.-x0; #relative x
  ry=y.-y0; #relative y
  r=(rx.^2.+ry.^2).^(1/2);
  dx=q./r.^2 .* rx./r;
  dy=q./r.^2 .* ry./r;
  


endfunction

function [dx,dy]=afiefNormalize(dx,dy,n) #x,y are vectors, n is the longest vector allowed
  for i=1:rows(dx)
    for j=1:columns(dy)
      if(dx(i,j).^2+dy(i,j).^2 > n.^2)
	tx=dx(i,j);
	ty=dy(i,j);
	ntx=n.*tx./((tx.^2.+ty.^2).^(1./2));
	nty=n.*ty./((tx.^2.+ty.^2).^(1./2));
	dx(i,j)=ntx;
	dy(i,j)=nty;
      endif
    endfor
  endfor
endfunction

[x,y]=meshgrid(-2:0.05:2,-2:0.05:2);
t=0:2*pi/1000:2*pi;

#[dx,dy]=afiefE(x,y,1,0,0)
#surf(x,y,(dx.^2+dy.^2).^(1./2));
#[dx,dy]=afiefNormalize(dx,dy,2);
[dx,dy]=afiefE(x,y,1,cos(t(1)),sin(t(1)));

for i=2:(columns(t)-1)
    [dx2,dy2]=afiefE(x,y,1,cos(t(i)),sin(t(i)));
    dx=dx+dx2;
    dy=dy+dy2;
endfor
[dx,dy]=afiefNormalize(dx,dy,2000);
quiver(x,y,dx,dy)
hold;
plot(cos(t),sin(t),'*');
hold;
pause
